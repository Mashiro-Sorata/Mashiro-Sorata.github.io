<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[APlayer Controler——可自定义的ap控制器]]></title>
    <url>%2FAPlayer-Controler%E2%80%94%E2%80%94%E5%8F%AF%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84ap%E6%8E%A7%E5%88%B6%E5%99%A8.html</url>
    <content type="text"><![CDATA[前言(Introduction)最近配置网站的时候，做了一个Aplayer的个性控制器（本站右端），在此基础上就把它做成了一个引用简单的对象，自定义配置更方便了。注：此1.0.0版本与Aplayer的1.6.0版本相匹配。Demo 安装(Install)NPM:1$ npm install aplayer-controler --save 使用说明(Usage)Important Make sure that “jquery” and “velocity” are existed in your project environment! 12&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/velocity/1.5.0/velocity.min.js"&gt;&lt;/script&gt; HTML 12&lt;div id="myapcid"&gt;&lt;/div&gt;&lt;script src="scr/Aplayer-Controler.min.js"&gt;&lt;/script&gt; Javascript 12345678910111213141516171819202122232425262728293031var myap = new APlayer(&#123;......&#125;); //Aplayer Partvar myapc=new APlayer_Controler(&#123; //Controler Part APC_dom:'#myapcid', aplayer:myap, attach_right:true, position:&#123;top:'300px',bottom:''&#125;, fixed:true, btn_width:100, btn_height:120, img_src:[], img_style:&#123;repeat:'no-repeat',position:'center',size:'contain'&#125;, ctrls_color:'rgba(173,255,47,0.7)', ctrls_hover_color:'rgba(255,140,0,0.8)', tips_on:true, tips_width:140, tips_height:25, tips_color:'rgba(255,255,255,0.5)', tips_content:&#123; on_loading:&#123;top:'音乐加载中',bottom:'不如来卖萌'&#125;, on_welcome:&#123;top:'音乐加载完成',bottom:'请继续看我卖萌'&#125;, on_timeout:&#123;top:'播放器暂无响应',bottom:'那就看我卖萌'&#125;, on_error:&#123;top:'音乐播放出错',bottom:'那就看我卖萌'&#125;, on_listend:&#123;top:'歌单已到底部',bottom:'接着看我卖萌'&#125;, on_nohistory:&#123;top:'没有历史纪录',bottom:'快去听歌吧！'&#125;, on_historyend:&#123;top:'历史纪录已到头',bottom:'快去听新歌吧！'&#125; &#125;, timeout:30, showOnPhone:false, songrecord_log:false&#125;; Details APC_dom: Required, controler’s id or className–’#id’, ‘.class’, $(); aplayer: Required, aplayer object; attach_right: Optional, whether controler on the right, default: true; position: Required, controler’s position; fixed: Optional, whether controler fixed on the page, default: true; btn_width: Optional, button’s width, default: 100; btn_height: Optional, button’s height, default: 120; img_src: Optional, button’s background-image ‘url-array’, default: []; img_style: Optional, style of button’s background-images, default: {repeat:’no-repeat’,position:’center’,size:’contain’}; ctrls_color: Optional, controlers’ color, default: ‘rgba(173,255,47,0.7)’; ctrls_hover_color: Optional, controlers’ color when the mouse hover, default: ‘rgba(255,140,0,0.8)’; tips_on: Optional, the message’s switch, default: true; tips_width: Optional, the message’s width, default: 140; tips_height: Optional, the message’s height, default: 25; tips_color: Optional, the message’s background-color,default: ‘rgba(255,255,255,0.5)’; tips_content: Optional, the message’s content, default: in Javascript; timeout: Optional, the longest time to wait player’s ‘canplay’ event when tips_on is true. And The button is disabled during this time. In addition, the on_loading of tips_content will close when timeout is ‘0’, and the button is valid all the time. default: 30; showOnPhone: Sets whether the ‘Aplayer-Controler’ is dispalyed, default: false; songrecord_log: Sets whether the song history shows in the console, default: false. Details(Chinese Version) APC_dom：必须，所绑定的APlayer_Controler,可以为’.className’,’#idName’,或者$(),getElementById绑定； aplayer：必须，所绑定的APlayer对象； attach_right：APlayer_Controler附着在左边或者右边，默认为右边(true)； position：必须，APlayer_Controler的位置,无默认值； fixed：APlayer_Controler是否锁定在页面内,默认为开(true)； btn_width：按钮宽度，默认为100px； btn_height：按钮高度，默认值为120px； img_src:按钮背景图链接数组，无默认值； img_style：按钮背景图样式，分别对应background-repeat,background-position,background-size，默认值见Javascript； ctrls_color：控制按键背景色，默认值为’rgba(173,255,47,0.7)’； ctrls_hover_color：控制按键鼠标停留时的背景色，默认值为’rgba(255,140,0,0.8)’； tips_on：提示信息开关,默认为开(true)； tips_width：提示信息宽度,默认为140px； tips_height：提示信息高度,默认为25px； tips_color：提示信息背景色，默认值为’rgba(255,255,255,0.5)’； tips_content：提示信息，分为上下两个，默认值见Javascript； timeout：设置播放器canplay事件无响应的最长时间，该时间内按钮区域无效，超时后有效。若为0则关闭无响应提示，且按钮一直有效，默认值30s； showOnPhone：手机端显示开关，默认(false)为不显示； songrecord_log：控制台是否输出历史记录，默认(false)为关。 最后附上仓库链接最后如果有什么问题、bug、建议的话欢迎issue，也非常欢迎大佬们指点！]]></content>
      <categories>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>个性化</tag>
        <tag>Aplayer</tag>
        <tag>控制器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HEXO+NEXT主题个性化配置]]></title>
    <url>%2FHEXO-NEXT%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE.html</url>
    <content type="text"><![CDATA[前言此文章用来记录本网站个性化的设置更改，以便备用，或者供人参考。提醒一下：博主next主题风格用的是Mist，若主题风格不一样，有些地方需酌情修改。在其他地方能找到的教程这里就不重复赘述，文章结尾会给出一些更为详尽的其他参考链接。 基本样式配置给页面添加背景图片在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234567body&#123; background:url(图片链接); background-size:cover; background-repeat:no-repeat; background-attachment:fixed; background-position:center; &#125; 其中的css样式属性都可以根据你的自定义图片来更改，以达到最佳的效果。 文字背景色以及半透明的设置在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：12345.content &#123; border-radius: 10px; margin-top: 60px; background:rgba(颜色rgb,透明度) none repeat scroll !important; &#125; 其中border-radius是给文章背景设置圆角，margin-top是设置文章到顶部的距离，其中属性可根据自己的需要进行调整。在修改完文章背景色之后，文字颜色可能和背景色不能很好的搭配，这时候我们就需要修改文章字体的颜色了。打开theme/next/source/css/_common/scaffolding文件夹下的base.styl文件，找到body{}，将其中的color:$text-color更改为你想要的颜色即可。代码如下：123456789101112body &#123; position: relative; /* Required by scrollspy */ font-family: $font-family-base; font-size: $font-size-base; line-height: $line-height-base; color: 颜色代码; background: $body-bg-color; +mobile() &#123; padding-right: 0 !important; &#125; +tablet() &#123; padding-right: 0 !important; &#125; +desktop-large() &#123; font-size: $font-size-large; &#125;&#125; 文章页面宽度设置在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1.main-inner &#123;width: 页面宽度;&#125; 文章内单行代码的样式设置在上面的设置中如果更改了网页底色，单行代码的颜色可能与背景色不搭配，这时就需要我们自己设置了。具体步骤：在theme/next/source/css/_custom文件夹下打开custom.styl文件，向里面添加以下代码：1#posts code &#123;color: 颜色代码;background-color:颜色代码;&#125; 其中为code的字体颜色，后者为背景颜色。其他文章内的颜色可以看一下theme/next/source/css/_common/scaffolding文件夹下的base.styl文件，有需要直接更改即可。 页面头部和底部栏的背景色修改在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234567.header &#123; background:rgba(颜色rgb,透明度) none repeat scroll !important; &#125;.footer &#123; background:rgba(颜色rgb,透明度) none repeat scroll !important; &#125; 头部和底部也可以加入自定义的背景图。只需要在其中加入background:url(图片的链接);即可。 评论(来必力)添加背景色在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234#lv-container &#123; border-radius: 10px; background:rgba(颜色rgb,透明度) none repeat scroll !important; &#125; 和上面一样，背景色和圆角可自己调整更改。 网页顶部和底部的文字颜色修改在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码： 头部文字颜色 更改头部site-title的字体颜色在theme/next/source/css/_common/components/header文件夹下打开site-meta.styl文件，找到.brand{}向里面添加以下代码： 1color: 颜色代码 !important; 更改头部menu的字体颜色在相同的文件夹下打开menu.styl文件，找到a{}，向里面添加以下代码： 1color: 颜色代码 !important; 底部文字颜色底部文字颜色的修改就显得很简单了，还是在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码： 1.footer-inner &#123;color: 颜色代码;&#125; 侧栏背景图以及内部文字颜色的修改在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234567#sidebar &#123; background:url(图片链接); background-size: cover; background-position:center; background-repeat:no-repeat; p,span,a &#123;color: 颜色代码;&#125;&#125; 其中设置p,span,a{color:颜色代码}，即可修改侧边栏内部文字的颜色。 主题风格样式配置修改Mist风格下的侧边栏位置为左边此设置为修改next主题Mist风格下侧边栏的位置为左边（默认为右边）以及侧边栏变化后页面变化的方向，具体操作如下： 更改页面变化方向：首先，打开next/source/js/src文件夹下的motion.js文件Ctrl+F查找paddingRight；把所有（2个）PaddingRight更改为paddingLeft即可。代码样式如下： 12&#123;paddingLeft: SIDEBAR_WIDTH&#125;,NexT.utils.isDesktop() &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingLeft: 0&#125;); 更改所有和sidebar相关的元素： 更改sidebar：打开next/source/css/_common/components/sidebar文件夹下的sidebar.styl文件，将.sidebar{}内的right: 0;改为left: 0;，形式如下： 123.sidebar &#123; position: fixed; left: 0; 打开相同路径下的sidebar-toggle.styl文件，将.sidebar-toggle{}内的right: $b2t-position-right;改为left: $b2t-position-right;，形式如下： 123.sidebar-toggle &#123; position: fixed; left: $b2t-position-right; 返回上一个文件夹，打开back-to-top.styl文件，将.back-to-top {}内的right: $b2t-position-right;改为left: $b2t-position-right;，形式如下： 12345.back-to-top &#123; box-sizing: border-box; position: fixed; bottom: $b2t-position-bottom; left: $b2t-position-right; 修正侧边栏在左边时的小BUG（前提：在Mist风格下侧边栏按本文设置为左边显示时）BUG描述：在更改浏览器大小的时候，顶部栏和底部栏未和侧边栏同步。解决方法：在themes/next/layout/source/js/src文件夹下打开motion.js文件，在$(document).ready(function (){}顶部其中添加代码：1234567891011121314window.onload=function()&#123; var bwol=document.body.offsetWidth; if(bwol &lt; 975)&#123; $('aside#sidebar').css("display","none"); $('body').css("paddingLeft","0px"); &#125;&#125;window.onresize = function()&#123; var bwos=document.body.offsetWidth; bwos &lt; 975 &amp;&amp; $('body').velocity('stop').velocity(&#123;paddingLeft: 0&#125;,0); if($('aside#sidebar').css('display') != 'none' &amp;&amp; $('aside#sidebar').css('width')!='0px') $('body').velocity('stop').velocity(&#123;paddingLeft: 350&#125;,0);&#125; 更改侧边栏控制按钮的样式在themes/next/layout/source/js/src文件夹下打开motion.js文件，在顶部其中更改代码。找到以下代码的位置：123var sidebarToggleLine1st = new SidebarToggleLine();var sidebarToggleLine2st = new SidebarToggleLine();var sidebarToggleLine3st = new SidebarToggleLine(); 将其内部内容更改为以下内容：123456789101112131415161718192021222324var sidebarToggleLine1st = new SidebarToggleLine(&#123; el: '.sidebar-toggle-line-first', status: &#123; arrow: &#123;width: '50%', rotateZ: '45deg', top: '2px', left: '6px'&#125;, // close: &#123;width: '100%', rotateZ: '-45deg', top: '5px', left: '0px'&#125; //叉字形 close: &#123;width: '50%', rotateZ: '-45deg', top: '2px', left: '0px'&#125; //箭头形 &#125; &#125;); var sidebarToggleLine2nd = new SidebarToggleLine(&#123; el: '.sidebar-toggle-line-middle', status: &#123; arrow: &#123;width: '90%'&#125;, // close: &#123;opacity: 0&#125; //箭头形 close: &#123;width: '90%'&#125; &#125; &#125;); var sidebarToggleLine3rd = new SidebarToggleLine(&#123; el: '.sidebar-toggle-line-last', status: &#123; arrow: &#123;width: '50%', rotateZ: '-45deg', top: '-2px', left: '6px'&#125;, // close: &#123;width: '100%', rotateZ: '45deg', top: '-5px', left: '0px'&#125; //叉字形 close: &#123;width: '50%', rotateZ: '45deg', top: '-2px', left: '0px'&#125; //箭头形 &#125; &#125;); 若要更改开启sidebar后toggle的显示样式为叉字形，将注释有箭头形的代码行删去或者注释掉，并取消有叉字形的代码注释即可。 添加侧边栏头像的链接描述：当把鼠标移到侧边栏里的头像上时，鼠标样式变为pointer，点击头像将把页面转向指定链接。 修改鼠标样式：在themes/next/layout/source/css/_common/componets/sidebar文件夹下打开sidebar-author.styl文件，在.site-author-image{}内添加cursor: pointer;形如： 123456789.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; cursor: pointer;&#125; 添加链接：在themes/next/layout/source/js/src文件夹下打开motion.js文件，在顶部其中添加代码： 123$('.site-author-image').click(function()&#123; window.location.href="自定义链接";&#125;); 设置鼠标划入侧边栏才显示站点信息： 设置自定义div在theme/next/layout/_macro文件夹下打开sidebar.swig文件，找到以下代码行的位置： 1&lt;nav class="site-state motion-element"&gt; 在其上添加以下代码： 12345678910111213&lt;!--my custom code begin--&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/velocity/1.5.0/velocity.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; $("#sidebar").hover(function()&#123; $("#mydivshow").velocity('stop').velocity(&#123;opacity: 1&#125;); &#125;,function()&#123; $("#mydivshow").velocity('stop').velocity(&#123;opacity: 0&#125;); &#125;);&lt;/script&gt;&lt;div id="mydivshow" class="mydivshow"&gt;&lt;!--my custom code end--&gt; 然后找到代码行： 12345&lt;/section&gt;&#123;% if display_toc and toc(page.content).length &gt; 1 %&#125;&lt;!--noindex--&gt;&lt;section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active"&gt; 在此&lt;/section&gt;的上方添加一个&lt;/div&gt;，如下所示： 123456789&lt;!--my custom code begin--&gt;&lt;/div&gt;&lt;!--my custom code end--&gt;&lt;/section&gt;&#123;% if display_toc and toc(page.content).length &gt; 1 %&#125;&lt;!--noindex--&gt; &lt;section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active"&gt; &lt;div class="post-toc"&gt; 自定义区域的初始化设置在theme/next/source/css/_custom文件夹下打开custom.styl文件，向里面增添下列代码： 1#mydivshow&#123;opacity: 0;&#125; 注：具体代码添加位置以及代码里的section.site-overview可以自己修改，&lt;div id=&quot;mydivshow&quot; class=&quot;mydivshow&quot;&gt;和末尾的&lt;/div&gt;是控制显示区域，section.site-overview则是用户鼠标滑入划出时的触发事件区域。 进阶个性化配置自定义音乐播放器描述：本站所用的音乐播放器是由DIYgod所制作的APlayer，其详细资料可参见这里。 安装APlayer插件1$ npm install aplayer --save 安装完后在node_modules目录下找到APlayer.min.js文件，将其复制到theme/next/source/js/src/目录下。 生成音乐播放器在你想要加入音乐播放器的地方插入以下代码，本站把他放在了侧边栏里，具体操作如下。打开theme/next/layout/_custom/文件夹下的sidebar.swig文件，向其中添加以下代码：12345678910111213141516171819202122&lt;div id="player1" class="aplayer"&gt;&lt;/div&gt;&lt;script src="/js/src/APlayer.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;var ap = new APlayer(&#123; element: document.getElementById('player1'), // Optional, player element narrow: false, // Optional, narrow style autoplay: true, // Optional, autoplay song(s), not supported by mobile browsers showlrc: 0, // Optional, show lrc, can be 0, 1, 2, see: ###With lrc mutex: true, // Optional, pause other players when this player playing theme: '#e6d0b2', // Optional, theme color, default: #b7daff mode: 'random', // Optional, play mode, can be `random` `single` `circulation`(loop) `order`(no loop), default: `circulation` preload: 'metadata', // Optional, the way to load music, can be 'none' 'metadata' 'auto', default: 'auto' listmaxheight: '513px', // Optional, max height of play list music: &#123; // Required, music info, see: ###With playlist title: 'Preparation', // Required, music title author: 'Hans Zimmer/Richard Harvey', // Required, music author url: 'http://7xifn9.com1.z0.glb.clouddn.com/Preparation.mp3', // Required, music url pic: 'http://7xifn9.com1.z0.glb.clouddn.com/Preparation.jpg', // Optional, music picture lrc: '[00:00.00]lrc here\n[00:01.00]aplayer' // Optional, lrc, see: ###With lrc &#125;&#125;);&lt;/script&gt; 自定义播放器样式包含颜色更改，列表歌曲信息的排版修改。在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234567891011121314151617181920.aplayer-list ol li:hover &#123; /*列表悬停颜色*/ background:rgba(颜色代码,透明度) none repeat scroll !important;&#125;.aplayer-list ol li &#123; /*列表底色*/ background:rgba(颜色代码,透明度);&#125;.aplayer-list-light &#123; /*列表播放歌曲颜色*/ background:rgba(颜色代码,透明度) none repeat scroll !important;&#125;#player1 &#123; /*边框样式*/ border-radius: 6px; div,ol &#123;border-radius: 6px;&#125; &#125;#player1 *&#123;color: 颜色代码;&#125; /*字体颜色*//*列表歌曲信息的排版*/.aplayer-list-index&#123;float:left;&#125;.aplayer-list-title&#123;float:left;&#125;.aplayer-list-author&#123;float:right;&#125; 自定义萌萌哒音乐播放控制边栏描述：效果见本博客右方。播放器状态提示方面：当播放器加载数据到能够播放后点击其会出现控制选项，若音乐不能播放点击其会出现提示信息；若自加载页面30s后仍不能播放，则提示播放器无响应；若播放器出错，则提示播放器错误；当音乐能够播放时提示加载完成。播放器控制方面：播放模式控制，上一首，暂停/播放，下一首四个按钮。此自定义的模块会记录下你所有播放过的歌曲，所以上一首歌返回的是绝对的上一首歌，不管播放模式如何。当处于上一首歌的状态下（按下了上一首歌按钮一次或者多次），当点击下一首按钮时，还是会按照历史记录的顺序播放；一旦退出此状态，则会按照播放模式进行播放。注：此自定义过程可能有些麻烦，请读者斟酌修改。 由于把这个控制栏部分单独做成了一个引用方便的对象，现在创建更加简单了，自定义也更方便了。其详细的使用方法见我的另一篇博文 添加js代码安装APlayer-Controler的js文件：APlayer-Controler将其放入theme/next/source/js/src下。 创建按钮区域在theme/next/layout/_custom/文件夹下新建一个myapcontroler.swig的文件。向其中添加以下代码：1234567891011121314151617181920212223242526&lt;script src="js/src/Aplayer-Controler.js"&gt;&lt;/script&gt;&lt;div id="AP-controler"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var myapc=new APlayer_Controler(&#123; APC_dom:$('#AP-controler'), aplayer:ap, //此为绑定的aplayer对象 attach_right:true, position:&#123;top:'300px',bottom:''&#125;, fixed:true, btn_width:100, btn_height:120, img_src:['http://oty1v077k.bkt.clouddn.com/bukagirl.jpg', 'http://oty1v077k.bkt.clouddn.com/jumpgirl.jpg', 'http://oty1v077k.bkt.clouddn.com/pentigirl.jpg', 'http://oty1v077k.bkt.clouddn.com/%E8%90%8C1.gif'], img_style:&#123;repeat:'no-repeat',position:'center',size:'contain'&#125;, ctrls_color:'rgba(173,255,47,0.8)', ctrls_hover_color:'rgba(255,140,0,0.7)', tips_on:true, tips_width:140, tips_height:25, tips_color:'rgba(255,255,255,0.6)', tips_content:&#123;&#125;, timeout:30 &#125;);&lt;/script&gt; 以上为本站设置，可自定义修改 将控制按钮加入body页面在theme/next/layout文件夹下打开_layout.swig文件，在&lt;/body&gt;前添加以下代码：1&#123;% include '_custom/myapcontroler.swig' %&#125; 到此，自定义音乐播放控制边栏就基本完成，完成整个配置需要根据自己的主题背景进一步修改完善。 DOS风格的404页面本站所用的404页面是博主无意间发现的，dos风格的404，逼格满满啊233不多说了，该放链接了：DOS风格404页面使用说明：进入页面后代码全部都展示出来了，注意CSS部分是SCSS。选择到右边选择栏找到选项：View Compiled CSS，这样它就将代码转换为CSS了。然后新建404.html，将代码复制粘贴（可以适当自定义修改一下）过来后保存到themes\next\source文件夹下即可。 网站的备份源自知乎：使用hexo，如果换了电脑怎么更新博客？相信不少人都有这个问题，我的博客采用的是Hexo的版本控制与持续集成这个方式。只需要将最新的网站文件git push到Github你的备份仓库里，AppVeyor在几分钟内就会自动更新你托管静态网站的仓库。 总结从开始一直折腾了将近一周，到处查资料，自定义修改，找bug修bug，不过也学到了很多东西，这里要感谢感谢很多很多的大神们的文章的指导。接下来就是分享其他博主的个性化教程了： https://segmentfault.com/a/1190000009544924#articleHeader21http://blog.csdn.net/MasterAnt_D/article/details/56839222#t50https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/ 版权声明：版权所有权属于Mashiro_Sorata，转载请注明出处，谢谢！]]></content>
      <categories>
        <category>Html</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>个性化设置</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Theories Of The Universe]]></title>
    <url>%2FTheories-Of-The-Universe.html</url>
    <content type="text"><![CDATA[此壁纸为运行在Wallpaper Engine上的网页动态壁纸，也是第一次接触html的作品。懒懒散散更新到现在，效果算一般般吧~预览gif图4M多，但是帧数相比实际运行的帧数差很多。以下为steam上创意工坊的链接：Theories Of The Universe 预览图及网页版Demo DEMO 描述壁纸一共8个可调整项： 闪动位移范围：值越大，星星抖动越厉害； 闪动速度：星星闪动变化的速度，值越大变化也就越快，增大可获取更好的效果； 星星个数：可选择星星的个数，目前有21颗，以后应该会增加； 闪动概率：星星闪动变化的概率，值越大变化概率也就越大，增大至最大值星星每次刷新都会变化，减小至合适值可获取更好地效果； 壁纸显示方式：有拉伸，填充，适应，如同桌面壁纸设置； 是否显示星球：如字面意思，可设置星球是否可见； 星球转动速度：设置星球自转速度。 调整星星个数时，星星随机显示。 ChangeLog(更新日志)2017年 update1.01：更新于&gt;1月25日&gt;下午10:40&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;优化了部分代码，增添了一颗星星。 update1.10：更新于&gt;1月30日&gt;下午8:25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此次更新优化了大部分的代码，把星星个数增加到15个，还增加了两个可选项（闪动概率以及壁纸显示方式）。下一步就是增加星星，以及星球转动的问题了。 update2.00：更新于&gt;2月5日&gt;下午7:51&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此次更新的壁纸已经完成，又新增了2个选项，一共7个可调整项。新增：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.是否显示星球：如字面意思，可设置星球是否可见；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.星球转动速度：值越大，星球转动速度越快。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还有一个算作小彩蛋的地方：点击星球那部分可以暂停转动，再次点击可继续转动。后续还会增加星星的数量以及优化的。 update2.01：更新于&gt;2月7日&gt;下午6:29&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此次更新解决了单机星球后不能暂停的bug。 update2.02：更新于&gt;3月5日&gt;下午2:02&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新增了6颗星星的显示。 update2.10：更新于&gt;7月14日&gt;下午11:41&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.优化了主程序部分的代码，占用CPU资源更少；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.改动：调整星星个数时星星随机显示。 update2.10：更新于&gt;8月4日&gt;下午5:24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;更正一个乱序显示星星时的小bug。 PS(备注)目前忙起来暂时不会动这个项目了，大概吧……有兴趣的朋友可以在我的仓库里看一下吧~]]></content>
      <categories>
        <category>Html</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>Wallpapaer Engine</tag>
        <tag>网页壁纸</tag>
        <tag>动态壁纸</tag>
        <tag>Steam</tag>
      </tags>
  </entry>
</search>